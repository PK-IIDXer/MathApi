// <auto-generated />
using System;
using MathApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MathApi.Migrations
{
    [DbContext(typeof(MathDbContext))]
    [Migration("20230705005013_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MathApi.Models.FormulaType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("FormulaTypes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Term"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Proposition"
                        });
                });

            modelBuilder.Entity("MathApi.Models.Symbol", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int?>("Arity")
                        .HasColumnType("int");

                    b.Property<long?>("ArityFormulaTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Character")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("SymbolTypeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ArityFormulaTypeId");

                    b.HasIndex("SymbolTypeId");

                    b.ToTable("Symbols");
                });

            modelBuilder.Entity("MathApi.Models.SymbolType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("FormulaTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FormulaTypeId");

                    b.ToTable("SymbolTypes");
                });

            modelBuilder.Entity("MathApi.Models.Symbol", b =>
                {
                    b.HasOne("MathApi.Models.FormulaType", "ArityFormulaType")
                        .WithMany()
                        .HasForeignKey("ArityFormulaTypeId");

                    b.HasOne("MathApi.Models.SymbolType", "SymbolType")
                        .WithMany()
                        .HasForeignKey("SymbolTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArityFormulaType");

                    b.Navigation("SymbolType");
                });

            modelBuilder.Entity("MathApi.Models.SymbolType", b =>
                {
                    b.HasOne("MathApi.Models.FormulaType", "FormulaType")
                        .WithMany()
                        .HasForeignKey("FormulaTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormulaType");
                });
#pragma warning restore 612, 618
        }
    }
}
